akka {
    loglevel = "DEBUG"
}

mySpecialConfig {
    akka {
        loglevl = "INFO"
    }
}

# Timed assertion mySpecialConfig

mySpecialConfig = {
akka.test.single-expect-default = 0.3s
}

#interceptingLog Messags

interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
            filter-leeway = 5s
        }
    }
}

# Routers Demo

routersDemo{
    akka {
        actor.deployment{
            /poolMaster2 {
                router = round-robin-pool
                nr-of-instances = 5
            }
            /groupMaster2 {
             router = round-robin-group
             routees.paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
            }
        }
    }
}


dispatcherDemo{

akka.actor.deployment {
    /sreenu {
        dispatcher = my-dispatcher
    }
}
}

my-dispatcher {
    type = Dispatcher #PinnedDispatcher , CallingThreadDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 1
    }
    throughput = 30
}

mailBoxDemo {
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    supportTicketDispatcher = {
        mailbox-type = "part5Infra.MailBoxes$SupportTicketPriorityMailBox"
    }
    akka.actor.deployment{
    /altControlAwareActor {
        mailbox = control-mailbox
    }
    }
}
